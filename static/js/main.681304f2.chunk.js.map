{"version":3,"sources":["components/Examples/ColorExamples.js","components/Button.js","components/Examples/ButtonExamples.js","components/Progress.js","components/Examples/ProgressExamples.js","components/Examples/DisplayPage.js","App.js","serviceWorker.js","index.js"],"names":["ColorExamples","react_default","a","createElement","className","style","textAlign","Button","props","_props$text","text","type","_props$onClick","onClick","console","log","_props$className","rest","Object","objectWithoutProperties","assign","concat","ButtonExamples","Button_Button","Progress","total","current","tick","_props$type","progress","tickMarks","i","push","parseInt","width","ProgressExamples","_useState","useState","_useState2","slicedToArray","primaryProgress","setPrimaryProgress","_useState3","_useState4","secondaryProgress","setSecondaryProgress","_useState5","_useState6","successProgress","setSuccessProgress","_useState7","_useState8","warningProgress","setWarningProgress","_useState9","_useState10","errorProgress","setErrorProgress","useEffect","setInterval","rand1","Math","random","rand2","rand3","rand4","rand5","Progress_Progress","DisplayPage","display","justifyContent","App","DisplayPage_DisplayPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.681304f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../tokens/ColorTokens.scss\";\r\nexport default function ColorExamples() {\r\n  return (\r\n    <div className=\"example\">\r\n      <h3 style={{ textAlign: \"left\" }}>Colors!</h3>\r\n      <div className=\"colorGrid\">\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox white\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox grey\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox nes-grey\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox dark\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox primary\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox primary-dark\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox success\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox success-dark\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox warning\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox warning-dark\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox error\" />\r\n        </div>\r\n        <div className=\"colorWrapper\">\r\n          <div className=\"colorBox error-dark\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nexport default function Button(props) {\r\n  const {\r\n    text = \"default\",\r\n    type,\r\n    onClick = () => console.log(\"click!\"),\r\n    className = \"\",\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <button className={`airy-button  ${className}`} onClick={onClick} {...rest}>\r\n      <div className={`button-inner ${type}`}>{text}</div>\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../Button.js\";\r\n\r\nexport default function ButtonExamples() {\r\n  return (\r\n    <div className=\"example\">\r\n      <div>\r\n        <h3 style={{ textAlign: \"left\" }}>Buttons!</h3>\r\n      </div>\r\n      <div className=\"button-wrapper\">\r\n        <Button type=\"primary\" text=\"primary\" />\r\n        <Button type=\"secondary\" text=\"secondary\" />\r\n        <Button type=\"success\" text=\"success\" />\r\n        <Button type=\"warning\" text=\"warning\" />\r\n        <Button type=\"error\" text=\"error\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Progress.scss\";\r\n\r\nexport default function Progress(props) {\r\n  const { total, current, tick, type = \"primary\" } = props;\r\n  const progress = `${(current / total) * 100}%`;\r\n\r\n  if (tick) {\r\n    const tickMarks = [];\r\n    for (let i = 1; i <= total; i++) {\r\n      tickMarks.push(\r\n        <div\r\n          className={`progress-tick ${i === parseInt(current) && \"currentTick\"} ${i <= current &&\r\n            type}`}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"progress-bar\">\r\n        <div className=\"tick-bar-inner\">{tickMarks}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <div className={`progress-inner ${type}`} style={{ width: `${progress}` }} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Progress from \"../Progress\";\r\n\r\nexport default function ProgressExamples() {\r\n  const [primaryProgress, setPrimaryProgress] = useState(1);\r\n  const [secondaryProgress, setSecondaryProgress] = useState(1);\r\n  const [successProgress, setSuccessProgress] = useState(1);\r\n  const [warningProgress, setWarningProgress] = useState(1);\r\n  const [errorProgress, setErrorProgress] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      const rand1 = Math.random() * 10;\r\n      const rand2 = Math.random() * 10;\r\n      const rand3 = Math.random() * 10;\r\n      const rand4 = Math.random() * 10;\r\n      const rand5 = Math.random() * 10;\r\n      setPrimaryProgress(rand1);\r\n      setSecondaryProgress(rand2);\r\n      setSuccessProgress(rand3);\r\n      setWarningProgress(rand4);\r\n      setErrorProgress(rand5);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"example\">\r\n      <div>\r\n        <h3 style={{ textAlign: \"left\" }}>Progress!</h3>\r\n      </div>\r\n      <Progress type=\"primary\" total={100} current={primaryProgress * 10} />\r\n      <Progress tick type=\"primary\" total={10} current={primaryProgress} />\r\n      <Progress type=\"secondary\" total={100} current={secondaryProgress * 10} />\r\n      <Progress tick type=\"secondary\" total={10} current={secondaryProgress} />\r\n      <Progress type=\"success\" total={100} current={successProgress * 10} />\r\n      <Progress tick type=\"success\" total={10} current={successProgress} />\r\n      <Progress type=\"warning\" total={100} current={warningProgress * 10} />\r\n      <Progress tick type=\"warning\" total={10} current={warningProgress} />\r\n      <Progress type=\"error\" total={100} current={errorProgress * 10} />\r\n      <Progress tick type=\"error\" total={10} current={errorProgress} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ColorExamples from \"./ColorExamples\";\r\nimport ButtonExamples from \"./ButtonExamples\";\r\nimport ProgressExamples from \"./ProgressExamples\";\r\nimport \"./DisplayPage.scss\";\r\n\r\nexport default function DisplayPage(props) {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div className=\"displayPage\">\r\n        <ColorExamples />\r\n        <ButtonExamples />\r\n        <ProgressExamples />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport DisplayPage from \"./components/Examples/DisplayPage\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Airy Library!</h2>\n      </header>\n      <DisplayPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}